import styled from "@emotion/styled";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import {
  Box,
  Button,
  Flex,
  Heading,
  Image,
  Text,
  useColorModeValue,
} from "@chakra-ui/react";
import { StarIcon, RepeatClockIcon } from "@chakra-ui/icons";

import Genres from "../../components/Genres";
import timeConverter from "../../components/utilities/timeConverter";
import SimilarMovies from "../../components/SimilarMovies";
import Companies from "../../components/Companies";
import Layout from "../../components/Layout";

import moviesApi from "../../api/movies";

export default function MovieDetails() {
  const router = useRouter();
  const movieId = router.query.id;
  const [movieDetails, setMovieDetails] = useState({});
  const [similarMovies, setSimilarMovies] = useState({});
  console.log(similarMovies);

  useEffect(() => {
    getMovieDetails();
    getSimilarMovies();
  }, [movieId]);

  const getMovieDetails = async () => {
    try {
      const response = await moviesApi.getMovieDetails(movieId);
      setMovieDetails(response.data);
    } catch (error) {
      console.log(error);
    }
  };

  const getSimilarMovies = async () => {
    try {
      const response = await moviesApi.getSimilarMovies(movieId);
      setSimilarMovies(response.data);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <Layout>
      <Head>
        <title>Movie Details-{movieId} - Master-Byte</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex gap={10}>
        <StyledImage
          src={`https://image.tmdb.org/t/p/w500${movieDetails?.poster_path}`}
        />
        <Box>
          <Heading as="h1" size="xl" lineHeight="1.2" maxW="28ch">
            {movieDetails?.title}
          </Heading>
          <Text my={5} color={useColorModeValue("gray.700", "whiteAlpha.700")}>
            {movieDetails?.tagline}
          </Text>
          <Flex gap={4} my={5}>
            <Flex align="center" gap={1}>
              <StarIcon />
              <Text>{movieDetails?.vote_average}</Text>
            </Flex>
            <Flex align="center" gap={1}>
              <RepeatClockIcon />
              <Text>{timeConverter(movieDetails?.runtime)}</Text>
            </Flex>
          </Flex>
          <Text maxW="100ch" mb={5}>
            {movieDetails?.overview}
          </Text>
          <Box mb="1.5rem">
            <Companies companies={movieDetails?.production_companies} />
          </Box>
          <Genres genres={movieDetails?.genres} />
        </Box>
      </Flex>
      <SimilarMovies movies={similarMovies} />
      <Flex justify="flex-end">
        {similarMovies?.total_pages > 1 && (
          <Button
            variant="solid"
            color="white"
            bg="red.500"
            p="1.5rem"
            transition="all 300ms ease"
            _hover={{ bg: "red.700" }}
            onClick={() => router.push(`/similar-movies/${movieId}`)}
          >
            View More...
          </Button>
        )}
      </Flex>
    </Layout>
  );
}

const StyledImage = styled(Image)`
  height: 400px;
  object-fit: contain;
`;
